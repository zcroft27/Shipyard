#!/bin/sh

set -e

# fixup /var/crash permissions (#449739)
if [ "$1" = configure ] && dpkg --compare-versions "$2" le-nl "0.89"; then
    if [ -d /var/crash ] && [ "$(stat -L -c '%a' /var/crash)" = "755" ]; then
        chmod 1777 /var/crash
    fi
fi

if [ "$1" = triggered ]; then
	for trigger in $2; do
		case $trigger in
			/usr/share/package-data-downloads)
				/usr/lib/update-notifier/package-data-downloader
				;;
		esac
	done
	exit 0
fi

# Ensure permissions are correct, otherwise downloading sandboxing fails
chown -R _apt:root /var/lib/update-notifier/package-data-downloads/partial/
chmod 700 /var/lib/update-notifier/package-data-downloads/partial/

# Run this when configuring as well, since we may not be triggered at all
# depending on package unpack order.
/usr/lib/update-notifier/package-data-downloader

# Automatically added by dh_installdeb/13.6ubuntu1
dpkg-maintscript-helper rm_conffile /etc/update-motd.d/20-cpu-checker 0.110.1ubuntu1 -- "$@"
dpkg-maintscript-helper rm_conffile /etc/cron.daily/update-notifier-common 3.192.34\~ -- "$@"
dpkg-maintscript-helper rm_conffile /etc/cron.weekly/update-notifier-common 3.192.34\~ -- "$@"
# End automatically added section
# Automatically added by dh_installsystemd/13.6ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'update-notifier-download.timer' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'update-notifier-download.timer'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'update-notifier-download.timer' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'update-notifier-download.timer' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/13.6ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# This will only remove masks created by d-s-h on package removal.
	deb-systemd-helper unmask 'update-notifier-motd.timer' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'update-notifier-motd.timer'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'update-notifier-motd.timer' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'update-notifier-motd.timer' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/13.6ubuntu1
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'update-notifier-download.service' 'update-notifier-download.timer' 'update-notifier-motd.service' 'update-notifier-motd.timer' >/dev/null || true
	fi
fi
# End automatically added section

